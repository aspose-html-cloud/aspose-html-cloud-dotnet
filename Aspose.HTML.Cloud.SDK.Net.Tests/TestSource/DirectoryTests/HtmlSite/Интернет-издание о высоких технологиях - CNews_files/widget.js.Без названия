
(function (global) {
    "use strict";
    var CNmarketAggregate = function () {
        if (CNmarketAggregate.prototype._instance) {
            return CNmarketAggregate.prototype._instance;
        }
        CNmarketAggregate.prototype._instance = this;
        if (document.location.hostname == 'test.market.cnews.ru') {
            var host = 'test.market.cnews.ru';
        }
        else if (document.location.hostname == 'localhost') {
            var host = 'localhost/_test_market';
        }
        else {
            var host = 'market.cnews.ru';
        }

        var href = (global.document.location.protocol == "https:" ? "https:" : "http:") + "//" + host + "/";

        var container, search, filter;
        var pull = [];
        var opts = {
            url: href + 'widget/',
            containerId: 'CNmarket_widget',
            cssId: 'CNMarketCss', // you could encode the css path itself to generate id..
            filter: '.cnm-filter-layout',
            filterInpput: '.cnm-filter-char:input',
            filterBox: '.cnm-filter-block-main',
            filterMore: '.cnm-filter-block-more',
            search: '.cnm-search-layout',
            result: '.cnm-search-list',
            row: '.cnm-search-list tr',
            colSort: '.cnm-td-sort-link',
            service: '.cnm-filter-block input[type=radio]',
            btnSearch: '.cnm-btn-search',
            btnMore: '.cnm-btn-search-page',
            btnFilter: '.cnm-btn-filters-more',
            btnArrow: '.cnm-sr-arrow'
        };

        if (!global.document.getElementById(opts.cssId)) {
            let link = global.document.createElement('link');
            link.id = opts.cssId;
            link.rel = 'stylesheet';
            link.type = 'text/css';
            link.href = href + 'inc/css/widget_new.css?1';
            link.media = 'all';
            global.document.getElementsByTagName('head')[0].appendChild(link);
        }

        var send = function (path, type, callback, data) {
            // type html, json 
            var o = {
                type: "POST",
                url: opts.url + path,
                dataType: type,
                beforeSend: function (jqXHR, setting) {
                    if (pull[setting.url]) {
                        pull[setting.url].abort();
                        pull[setting.url] = null;
                    }
                },
                complete: function (jqXHR, textStatus) {
                    pull[opts.url + path] = null;
                }
            }
            if (typeof data !== "undefined") {
                o.data = data;
            }
            if (typeof callback !== "undefined") {
                o.success = callback;
            }


            pull[opts.url + path] = $.ajax(o);
        }

        var getService = function () {
            return $(opts.service + ':checked').data('id');
        }
        var getFilterData = function () {
            var inputs = $(opts.filter).find(opts.filterInpput);
            var data = {
                serv_id: getService(),
                search: {}
            };
            inputs.each(function () {
                var input = $(this), s = 'search[' + input.data('id') + ']';
                switch (input.attr('type')) {
                    case 'checkbox':
                        if (input.prop('checked')) {
                            data[s] = input.val();
                        }

                        break;
                    case 'number':
                        data[s + '[' + input.data('type') + ']'] = input.val();
                        break;

                    case 'select-multiple':
                        let sel = input.val();
                        $.each(sel, function (key, val) {
                            data[s + '[]'] = val;
                        });
                        break;
                    case 'select-one':
                    default:
                        data[s] = input.val();
                }
            })
            return data;
        }

        var set–°ontainerEvent = function () {
            $(container).on('change', opts.service, function () {
                let data = { serv_id: $(this).data('id') }
                send('service', 'json', initService, data);
                $(".cnm-filter-height", container).removeClass("cnm-filter-height-fixed");

                if (document.location.hostname == 'test.market.cnews.ru') {
                    var host_r = 'test.market.cnews.ru';
                    //history.pushState({ param: 'Value' }, '', window.location.protocol + '//' + window.location.host + '/service/' + $(this).attr("translate"));
                    window.location = window.location.protocol + '//' + host_r + '/service/' + $(this).attr("translate");
                }
                else if (document.location.hostname == 'localhost') {
                    var host_r = 'localhost/_test_market';
                }
                else if (document.location.hostname == 'market.cnews.ru') {
                    var host_r = 'market.cnews.ru';
                    //history.pushState({ param: 'Value' }, '', window.location.protocol + '//' + window.location.host + '/service/' + $(this).attr("translate"));
                    window.location = window.location.protocol + '//' + host_r + '/service/' + $(this).attr("translate");
                }
                else {
                    var host_r = 'market.cnews.ru';
                }

                $(".cnm-filter-links a").hide();
                $(".cnm-filter-links a[data-id = " + $(this).attr("translate") + "]").show();
            });

            $(container).on('click', opts.btnSearch, function () {

                send('search', 'html', initSearch, getFilterData());
            })

        }

        var setFilterBoxEvent = function (filterBox) {
            if (global.document.location.host != host) {

                var cnb = $('[data-cnb]', filterBox).data('cnb');
                var place = $('.cnm-container-top', container).get(0);
                if (cnb && place) {
                    place.innerHTML = '<div id="cnb_zone_' + cnb + '" data-zone="' + cnb + '" class="cnb-zone cnb-zone-' + cnb + '"></div>';
                    let script = document.createElement("script");
                    script.src = "//cnb.cnews.ru/rotator.php?zone=" + cnb;
                    place.appendChild(script);
                }
            }

            $(opts.btnFilter, filterBox).click(function () {
                $(filterBox).find(opts.filterMore).toggle();

                $(".cnm-filter-height").toggleClass("cnm-filter-height-fixed");
            });
            if ($(filterBox).find(opts.filterMore).length == 0) {
                $(opts.btnFilter, filterBox).hide();
            } else {
                $(opts.filterMore, filterBox).hide();
            }

            $('.cnm-slider-block-int', filterBox).each(function (i) {
                var block = this;
                var range = $('.cnm-sr-inputs-range', block);
                var r_val = {
                    min: $('.cnm-sr-input-min', block),
                    max: $('.cnm-sr-input-max', block)
                };
                var val = {
                    min: parseInt(r_val.min.attr('min'), 10),
                    max: parseInt(r_val.min.attr('max'), 10)
                };
                range.slider({
                    range: true,
                    min: val.min,
                    max: val.max,
                    values: [val.min, val.max],
                    slide: function (event, ui) {
                        r_val.min.val(ui.values[0]);
                        r_val.max.val(ui.values[1]);
                    }
                });
                r_val.min.change(function () {
                    range.slider('values', 0, $(this).val());

                    if (Number($(this).val()) > Number(r_val.max.val())) {
                        $(this).val(r_val.max.val());
                    }
                });
                r_val.max.change(function () {
                    range.slider('values', 1, $(this).val());
                    if (Number($(this).val()) < Number(r_val.min.val())) {
                        $(this).val(r_val.min.val());
                    }
                });

                var iid = null;
                var period = 1;
                var period_step = -1;

                $(opts.btnArrow, block).mousedown(function () {
                    var input = $(block).find($(this).data('input')).get(0);
                    if ($(this).data('step') == 'up') {
                        if (input != r_val.min.get(0) || parseFloat($(input).val()) < parseFloat(r_val.max.val()) || r_val.max.val() == '') {
                            if (iid) {
                                clearInterval(iid);
                            }
                            input.stepUp(period);
                            iid = setInterval(() => { period = period + period_step++; input.stepUp(period) }, 100);
                        }
                    } else {
                        if (input != r_val.max.get(0) || parseFloat($(input).val()) > parseFloat(r_val.min.val()) || r_val.max.val() == '') {
                            if (iid) {
                                clearInterval(iid);
                            }
                            input.stepDown(period);
                            iid = setInterval(() => { period = period + period_step++; input.stepDown(period) }, 100);
                        }
                    }
                });
                $(opts.btnArrow, block).mouseup(function () {
                    if (iid) {
                        clearInterval(iid);
                        period = 1;
                        period_step = -1;
                    }
                });
            });



        }
        var setSearchEvent = function (search) {

            $(opts.colSort + ' div', search).click(function () {
                $(this).closest(opts.colSort).toggleClass('cnm-upside-down');
            })


            $(opts.colSort, search).each(function () {
                if ($(this).outerWidth() < 80) {
                    $(this).addClass("cnm-hide-arrow");
                }
            });

            $(opts.btnMore, search).click(function () {
                let data = getFilterData();
                //data.page = $(this).data('page');
                data.page = $(opts.row, search).length;
                data.search_id = $(opts.btnMore, search).data('search');
                send('more', 'html', addRows, data);
                $(".cnm-filter-height").removeClass("cnm-filter-height-fixed");
                $(".cnm-oc-buttons").css("margin-top", "0");
            });
            showMore();
        }

        var showMore = function () {
            if ($(opts.btnMore, search).data('result') <= $(opts.row, search).length) {
                $(opts.btnMore, search).hide();
            } else {
                $(opts.btnMore, search).show();
            }
        }

        var initService = function (data) {
            initFilter(data['filter']);
            initSearch(data['search']);
        }

        var initFilter = function (html) {
            let filterBox = $(opts.filterBox, filter).get(0);
            filterBox.innerHTML = html;
            setFilterBoxEvent(filterBox);
        }
        var initSearch = function (html) {
            search.innerHTML = html;
            setSearchEvent(search);
        }
        var addRows = function (html) {
            $(opts.result, search).append(html);
            showMore();
        }
        var init–°ontainer = function (html) {
            container.innerHTML = html;
            filter = $(container).find(opts.filter).get(0);
            search = $(container).find(opts.search).get(0);
            set–°ontainerEvent(container);
            setFilterBoxEvent(filter);
            setSearchEvent(search);
        }

        this.init = function () {
            container = global.document.getElementById(opts.containerId);

            let arr = window.location.pathname.split('/');
            var data = {};

            if (arr[arr.length - 2] == 'service') {
                data = { serv_translate: arr[arr.length - 1] };
            }
            else if (window['start_service'] != '') {
                data = { serv_translate: window['start_service'] };
            }

            send('load', 'html', init–°ontainer, data);
        }
        this.init();
    };
    global.CNmarket = new CNmarketAggregate();
}(this));